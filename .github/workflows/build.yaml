iname: Build image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: ./yarn.lock
      - name: Install semantic-release
        run: |
          yarn install
      - name: Bump version and push tag
        id: semantic
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: create tag
        run: |
          echo "VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
      - name: Login to docker.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/${{ matrix.arch }}
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          provenance: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/latex-docker:latest-${{ matrix.arch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/latex-docker:${{ env.VERSION }}-${{ matrix.arch }}
  manifest:
    runs-on: ubuntu-20.04
    needs: build
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: -1
      - name: create tag
        run: |
          echo "IMAGE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
      - uses: ./.github/actions/create-multi-arch-image
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: ${{ secrets.DOCKERHUB_USERNAME }}/latex-docker
          image-version: ${{ env.IMAGE_VERSION }}
      - name: Create GitHub Releases
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Changes in this Release
            - Auto generated by [semantic-release](https://github.com/semantic-release/semantic-release)
          draft: false
          prerelease: false
